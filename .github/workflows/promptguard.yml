name: PromptGuard CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-prompts:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Run PromptGuard Tests
      uses: ./
      with:
        config-file: promptguard.yaml
        openai-api-key: ${{ secrets.OPENAI_API_KEY }}
        anthropic-api-key: ${{ secrets.ANTHROPIC_API_KEY }}
        baseline-path: .promptguard/baseline.json
        artifacts-dir: artifacts
        fail-on-regression: true
      
    - name: Update Baseline (main branch only)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        mkdir -p .promptguard
        cp artifacts/results.json .promptguard/baseline.json
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .promptguard/baseline.json
        git diff --staged --quiet || git commit -m "Update PromptGuard baseline [skip ci]"
        git push

    - name: Generate Badge
      if: github.ref == 'refs/heads/main'
      run: |
        # Badge will be generated by the PromptGuard action
        echo "Badge URL available in job summary"
